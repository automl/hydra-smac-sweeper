defaults:
  - override hydra/sweeper: SMAC
  - override hydra/launcher: submitit_smac_slurm

learning_rate: constant
learning_rate_init: 0.001
batch_size: 200
n_neurons: 10
n_layer: 1
solver: adam
activation: tanh
max_epochs: 50
seed: 42

hydra:
  launcher:
    partition: cpu_normal
  sweeper:
    budget_variable: max_epochs  # TODO adjust MLP example to new interface
    seed: ${seed}
    n_jobs: 4
    n_trials: 45
    smac_class: smac.facade.smac_mf_facade.SMAC4MF
    smac_kwargs:
      scenario:
        run_obj: quality
        deterministic: true
        #      wallclock_limit: 100
        cutoff: 30  # runtime limit for target algorithm
        memory_limit: 3072  # adapt this to reasonable value for your hardware
      intensifier: ${get_class:smac.intensification.hyperband.Hyperband}
      intensifier_kwargs:
          initial_budget: 5  # start with 5 epochs
          max_budget: ${max_epochs}  # at most 50 epochs
          eta: 3
    search_space:
      hyperparameters:
        n_layer:
          type: uniform_int
          lower: 1
          upper: 5
          default: ${n_layer}
        n_neurons:
          type: uniform_int
          lower: 8
          upper: 1024
          log: true
          default_value: ${n_neurons}
        activation:
          type: categorical
          choices: [logistic, tanh, relu]
          default_value: ${activation}
        solver:
          type: categorical
          choices: [lbfgs, sgd, adam]
          default_value: ${solver}
        batch_size:
          type: uniform_int
          lower: 30
          upper: 300
          default_value: ${batch_size}
        learning_rate:
          type: categorical
          choices: [constant, invscaling, adaptive]
          default_value: ${learning_rate}
        learning_rate_init:
          type: uniform_float
          lower: 0.0001
          upper: 1
          default_value: ${learning_rate_init}
          log: true
      conditions:
        - child: batch_size
          parent: solver
          type: IN
          values: [sgd, adam]
        - child: learning_rate
          parent: solver
          type: EQ
          value: sgd
        - child: learning_rate_init
          parent: solver
          type: IN
          values: [sgd, adam]

  run:
    dir: ./tmp/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: ./tmp/${now:%Y-%m-%d}/${now:%H-%M-%S}
